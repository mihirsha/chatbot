name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  Continious_integration:
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: rental_postgres
      DATABASE_USERNAME: rental_system
      SECRET_KEY: uYU46G&$BZ%!8&Y*!&q7G$jxdEG9sf3P6Limk52%N@P86regE7%58@8ECr3D9o2*HiU
      ALGORITHM: HS256
      TOKEN_EXPIRY: 60
      POSTGRES_USER: rental_system
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rental_postgres

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: rental_system
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rental_postgres_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: checking out
        uses: actions/checkout@v2

      - name: installing python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.6"

      - name: update pip
        run: python -m pip install --upgrade pip

      - name: installing all the dependency
        run: pip3 install --no-cache-dir -r requirements.txt

      # - name: docker compose up
      #   run: |
      #     sudo docker-compose up -d
      #     sudo docker ps

      - name: running testcases
        run: pytest --disable-warnings

      - name: dockerizing backend app
        run: sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/rental_system .

      - name: pushing image to dockerhub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PWD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          sudo docker login -u $DOCKER_USER -p $DOCKER_PWD
          sudo docker push $DOCKER_USER/rental_system

      - name: docker logout
        run: sudo docker logout

  Continious_Deployment:
    runs-on: ubuntu-latest
    needs: [Continious_Integration]
    steps:
      - name: deployment
        run: python3 --version
