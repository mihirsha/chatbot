name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  Continious_integration:
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      TOKEN_EXPIRY: ${{ secrets.TOKEN_EXPIRY }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    runs-on: ubuntu-latest
    # services:
    #   postgres:
    #     image: postgres
    #     env:
    #       POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
    #       POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #       POSTGRES_DB: ${{ secrets.POSTGRES_DB }}_test
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
      - name: checking out
        uses: actions/checkout@v2

      - name: installing python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.6"

      - name: installing all the dependency
        run: |
          python -m pip install --upgrade pip
          pip3 install --no-cache-dir -r requirements.txt

      - name: docker compose up
        run: |
          sudo docker-compose up -d
          sudo docker ps

      - name: running testcases
        run: pytest --disable-warnings

      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PWD: ${{ secrets.DOCKER_PASSWORD }}
        run: sudo docker login -u $DOCKER_USER -p $DOCKER_PWD

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/rental_system:latest
          cache-from: type=local,src=/temp/.buildx-cache
          cache-to: type=local,dest=/temp/.buildx-cache

      - name: Image Digest
        run: echo  ${{ steps.docker_build.outputs.digest }}

        # sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/rental_system .
        # sudo docker push $DOCKER_USER/rental_system
        # sudo docker logout

  Continious_Deployment:
    runs-on: ubuntu-latest
    needs: [Continious_Integration]
    steps:
      - name: deployment
        run: python3 --version
