pipeline {
    agent any

    stages {
        stage('Build') {

            // environment {
            //     DOCKER_HUB_CREDENTIALS=credentials('dockerhub')
            //     DOCKER_IMAGE=credentials('dockerimage')
            // }

            steps {
                // sh "sudo docker --version"
                sh "sudo docker ps"
                // sh "sudo docker login -u mihirshah01 -p deepmihir"
                // sh "sudo docker push mihirshah01/rental_system"
                // dir('./Dockerfile'){
                //     script{
                //         dockerImage = docker.build("$DOCKER_IMAGE", "-f ./dockerfile")
                //     }
                // }
                // sh """
                //     sudo apt-get update && sudo apt-get upgrade -y
                //     sudo apt-get install python3-pip -y
                //     sudo apt-get upgrade -y
                //     pip3 install --no-cache-dir -r requirements.txt 
                //     sudo apt-get upgrade -y
                // """
                // sudo usermod -aG docker jenkins
                    // sudo gpasswd -a jenkins docker                
                // sudo usermod -aG docker jenkins
                // sudo dockerd

                    // sudo apt-get install -y docker-ce-rootless-extras
                    // sudo service docker start
                // sh """
                    
                //     sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
                //     sudo apt-get update && sudo apt-get upgrade -y
                //     sudo docker --version
                //     sudo usermod -aG docker jenkins
                //     sudo apt-get update && sudo apt-get upgrade -y
                //     sudo service docker start
                //     sudo docker ps
                    
                //     echo $DOCKER_HUB_CREDENTIALS_PSW | sudo docker login -u $DOCKER_HUB_CREDENTIALS_USR --password-stdin
                //     sudo docker build --no-cache -t $DOCKER_IMAGE .
                // """

                    
            }
        }

        stage('Testing') {
            steps {
                echo 'Testing'
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploy'
            }
        }
    }
}
