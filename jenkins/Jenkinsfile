pipeline {
    agent any

    stages {
        stage('Build') {

            environment {
                DOCKER_HUB_CREDENTIALS=credentials('dockerhub')
                DOCKER_IMAGE=credentials('dockerimage')
                USER_CREDENTIALS=credentials('user')
            }

            steps {
                sh """
                    echo $USER_CREDENTIALS_PSW | sudo -E -S apt-get update && sudo apt-get upgrade -y
                    echo $USER_CREDENTIALS_PSW | sudo -E -S apt-get install python3-pip -y
                    sudo apt update
                    pip install --no-cache-dir -r requirements.txt 
                """
                sh """
                    
                    echo $USER_CREDENTIALS_PSW | sudo -E -S su - $USER_CREDENTIALS_USR
                    echo $DOCKER_HUB_CREDENTIALS_PSW | sudo -E -S docker login -u $DOCKER_HUB_CREDENTIALS_USR --password-stdin
                    sudo apt update
                    echo $DOCKER_HUB_CREDENTIALS_PSW | sudo docker build --no-cache -t $DOCKER_IMAGE .
                    echo $DOCKER_HUB_CREDENTIALS_PSW | sudo docker push $DOCKER_IMAGE:latest
                    echo $DOCKER_HUB_CREDENTIALS_PSW | sudo docker logout
                """
            }
        }

        stage('Testing') {
            steps {
                sh """
                    echo $USER_CREDENTIALS_PSW | sudo -E -S sudo docker-compose up -d
                    sudo docker ps
                    pytest --disable-warnings
                """
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploy'
            }
        }
    }
}
